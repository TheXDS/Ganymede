<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:st="clr-namespace:TheXDS.Ganymede.Resources.Strings;assembly=Ganymede"
    xmlns:gn="http://schemas.thexds.local/ganymede"
    xmlns:gn2="clr-namespace:TheXDS.Ganymede.Controls">
    <SolidColorBrush x:Key="PasswordBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="PasswordBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="PasswordBox.Focus.Border" Color="#FF569DE5"/>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PasswordBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="gn2:ExtraProps.Icon" Value="🔑"/>
        <Setter Property="gn2:ExtraProps.Label" Value="{x:Static st:Common.Password}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <DockPanel Margin="2">
                            <TextBlock
                                x:Name="PART_Icon"
                                Foreground="{StaticResource PasswordBox.Static.Border}"
                                Text="{Binding Path=(gn:ExtraProps.Icon), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBlock
                                FontStyle="Italic"
                                Margin="0 0 2 0"
                                Foreground="{StaticResource PasswordBox.Static.Border}"
                                Text="{Binding Path=(gn:ExtraProps.Label), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PasswordBox.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="PART_Icon" Value="{StaticResource PasswordBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PasswordBox.Focus.Border}"/>
                            <Setter Property="Foreground" TargetName="PART_Icon" Value="{StaticResource PasswordBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>