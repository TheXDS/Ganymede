using System.Diagnostics.CodeAnalysis;

namespace TheXDS.Ganymede.Models;

/// <summary>
/// Represents the result of a dialog when it can return a value.
/// </summary>
/// <param name="Success">
/// Set to <see langword="true"/> if the user entered a value successfully or
/// if the dialog produced an output, <see langword="false"/> if the user
/// cancels the dialog.
/// </param>
/// <param name="Result">
/// Value entered by the user or generated by the operation. Will be equal to
/// <see langword="default"/> for the <typeparamref name="T"/> type if the user
/// cancels the dialog.
/// </param>
/// <typeparam name="T">
/// Type of value to be returned by the dialog.
/// </typeparam>
public record struct DialogResult<T>([property:MemberNotNullWhen(true, "Result")]bool Success, T Result)
{
    /// <summary>
    /// Returns a new <see cref="DialogResult{T}"/> value that indicates
    /// failure.
    /// </summary>
    /// <returns>
    /// A new <see cref="DialogResult{T}"/> value that indicates failure.
    /// </returns>
    public static DialogResult<T> Fail() => new(false, default!);

    /// <summary>
    /// Implicitly converts a <see cref="DialogResult{T}"/> to a
    /// <see cref="bool"/> that represents either success or failure to get
    /// input from the user.
    /// </summary>
    /// <param name="value">Value to convert.</param>
    /// <returns>
    /// <see langword="true"/> if the user entered a value successfully,
    /// <see langword="false"/> if the user cancels the input dialog.
    /// </returns>
    public static implicit operator bool(DialogResult<T> value) => value.Success;
    
    /// <summary>
    /// Implicitly converts a <see cref="DialogResult{T}"/> to an instance of
    /// <typeparamref name="T"/> that represents the input entered by the user.
    /// </summary>
    /// <param name="value">Value to convert.</param>
    /// <returns>
    /// The value entered by the user. Will be equal to
    /// <see langword="default"/> for the <typeparamref name="T"/> type if the
    /// users cancels the input dialog.
    /// </returns>
    public static implicit operator T(DialogResult<T> value) => value.Result;

    /// <summary>
    /// Implicitly converts a value of type <typeparamref name="T"/> into a
    /// new <see cref="DialogResult{T}"/> instance that indicates success.
    /// </summary>
    /// <param name="result">Result of the input dialog.</param>
    public static implicit operator DialogResult<T>(T result) => new(true, result);
}
